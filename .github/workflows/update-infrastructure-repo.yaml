name: Update Infrastructure Repo to reflect changes after merge
on:
  workflow_call:
    inputs:
      environment-matrix-json:
        required: true
        type: string
        description: |
          on line json build matrix in the form of
          [ { "environment":"env name","auto-merge": "true/false","auto-approve":"true/false"},  { "environment":"env name","auto-merge": "true/false","auto-approve":"true/false"}, { "merge-method": "squash/merge/rebase"} ]
          note: all the values of the keys will be accessable in the script environment, for example you can point to the env variable $environment but be aware the rules for
          environment variables apply, for example you can not have dashes in the name or else the variable will not load correctly when you use it in the script.
      working-directory:
        required: false
        type: string
        description: Path where to run
        default: update-infrastructure-repo-workflow
      source-github-repo:
        required: true
        type: string
        description: Github Repo to clone
      update-script:
        required: true
        type: string
      write-back-application-id:
        required: false
        type: number
        default: 172868
      service:
        required: false
        type: string
        default: 'service'
      version:
        required: false
        type: string
        description: Version to use in commit message and PR title. If not provided, git sha is used.
      close-existing-prs:
        required: false
        type: boolean
        default: true
        description: If close-existing-prs is true, this workflow will look up existing open PR's for the same environment and service, and close them. This will leave you with only 1 PR per service/environment-combination.
      preserve-closed-pr-bodies:
        required: false
        type: boolean
        default: false
        description: If preserve-pr-bodies is true, this workflow will append the bodies of any prior open PR's for the same environment and service to the body of the new PR. This allows you to preserve the context from PRs that will be closed.

    secrets:
      approve-pr-token:
        required: false
      write-back-app-pem:
        required: true
        description: Private PEM for usage of the write_back_app in github

jobs:
  update-infrastructure:
    name: Update Infrastructure
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include: ${{ fromJSON(inputs.environment-matrix-json) }}

    steps:
      - name: Generate token for writeback to pr
        id: generate_token
        # v1.5.1
        uses: actions/create-github-app-token@v2.1.4
        with:
          app-id: 172868
          private-key: ${{ secrets.write-back-app-pem }}
          owner: coopnorge

      - name: Get GitHub App User ID for the writeback to pr bot
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.generate_token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Clone the repostory
        # v3.0.0
        uses: actions/checkout@v5
        with:
          repository: ${{ inputs.source-github-repo }}
          ref: main
          token: ${{ steps.generate_token.outputs.token }}
          path: ${{ inputs.working-directory }}
          fetch-depth: 0

      - name: Run Script
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.update-script }}
        env: ${{ matrix }}

      - name: Set branch name
        id: set-branch-name
        run: |
          if [ "${{ inputs.service }}" != "" ]
          then
            echo "BRANCH=update-${{ inputs.service }}-${{ matrix.environment }}-to-${{ github.sha }}" >> $GITHUB_OUTPUT
          else
            echo "BRANCH=update-${{ matrix.environment }}-to-${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Set commit message
        id: set-commit-message
        run: |
          if [ "${{ inputs.version }}" != "" ]
          then
            echo "COMMIT_MESSAGE=Bump \`${{ inputs.service }}\` to version \`${{ inputs.version }}\` in \`${{ matrix.environment }}\`" >> $GITHUB_OUTPUT
          else
            echo "COMMIT_MESSAGE=Bump \`${{ inputs.service }}\` to \`${{ github.sha }}\` in \`${{ matrix.environment }}\`" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        id: cpr
        # v3.14.0
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # 67ccf781d68cd99b580ae25a5c18a1cc84ffff1f
        with:
          path: ${{ inputs.working-directory }}
          token: ${{ steps.generate_token.outputs.token }}
          sign-commits: true
          commit-message: ${{ steps.set-commit-message.outputs.COMMIT_MESSAGE }}
          title: ${{ steps.set-commit-message.outputs.COMMIT_MESSAGE }}
          committer: ${{ steps.generate_token.outputs.app-slug }}[bot] <${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate_token.outputs.app-slug }}[bot]@users.noreply.github.com>
          author: ${{ steps.generate_token.outputs.app-slug }}[bot] <${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate_token.outputs.app-slug }}[bot]@users.noreply.github.com>
          branch: ${{ steps.set-branch-name.outputs.BRANCH }}
          delete-branch: true
          body: |
            Changes from ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}

            ${{ github.event.head_commit.message }}

          labels: |
            deployment
            service:${{ inputs.service }}
            environment:${{ matrix.environment }}

      - name: Set pull request to auto-merge
        if: ${{ matrix.auto-merge == 'true' }}
        # v1.2.0
        uses: peter-evans/enable-pull-request-automerge@a660677d5469627102a1c1e11409dd063606628d # a660677d5469627102a1c1e11409dd063606628d
        with:
          token: ${{ steps.generate_token.outputs.token }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          repository: ${{ inputs.source-github-repo }}
          merge-method: ${{ matrix.merge-method || 'squash' }}

      - name: Approve Pull Request
        if: ${{ matrix.auto-approve == 'true' }}
        # v1.1.1
        uses: juliangruber/approve-pull-request-action@b71c44ff142895ba07fad34389f1938a4e8ee7b0 # b71c44ff142895ba07fad34389f1938a4e8ee7b0
        with:
          github-token: ${{ secrets.approve-pr-token }}
          number: ${{ steps.cpr.outputs.pull-request-number }}
          repo: ${{ inputs.source-github-repo }}

      # Derive the ref that the caller used to invoke this reusable workflow
      - name: Derive called workflow ref
        id: workflowref
        run: |
          full="${{ github.workflow_ref }}"
          ref="${full##*@}" # everything after the last '@'
          echo "ref=$ref" >> "$GITHUB_OUTPUT"
      - name: Checkout engineering-github-actions to access scripts from caller
        if: ${{ inputs.preserve-closed-pr-bodies}}
        uses: actions/checkout@v4
        with:
          repository: coopnorge/engineering-github-actions
          ref: ${{ steps.workflowref.outputs.ref }}
          path: engineering-github-actions

      - name: Append prior PR bodies to current one
        if: ${{ inputs.preserve-closed-pr-bodies}}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
          REPO: ${{ github.server_url }}/${{ inputs.source-github-repo }}
          CURRENT_PR_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
          SERVICE: ${{ inputs.service }}
          ENVIRONMENT: ${{ matrix.environment }}
        run: engineering-github-actions/.github/scripts/preserve-pr-bodies.sh
        shell: bash

      - name: Close existing Pull-requests
        if: ${{ inputs.close-existing-prs }}
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          # Saner programming environment. Turns common developer mistakes into errors.
          set -eu -o pipefail

          # Enable debug-logging, prints every command before running it
          set -x

          if [[ "${{ inputs.service }}" == "" || "${{ inputs.service }}" == "service" ]]; then
              echo "No explicit service set, not closing old existing pull-requests"
              exit 0
          fi

          cleanup() {
            rm -f open-prs.json || :
            rm -f old-prs.json || :
          }
          trap cleanup EXIT


          # List all open PRs for this service/environment-combination
          gh pr list --label "service:${{ inputs.service }}" --label "environment:${{ matrix.environment }}" --label deployment --state=open --app 'writebackinpr' --repo "${{ github.server_url }}/${{ inputs.source-github-repo }}" --json number > open-prs.json
          cat open-prs.json | jq

          # Remove the current PR from the list, to avoid closing the PR we just created
          jq -c '[.[] | select (.number != '"${{ steps.cpr.outputs.pull-request-number }}"')]' open-prs.json > old-prs.json
          cat old-prs.json | jq

          # Extract the numbers from the JSON file and iterate over them
          jq -c '.[].number' old-prs.json | while read -r number; do
              # Close the old PR, while leaving a comment that it was superseded by the PR
              gh pr close "$number" --comment "Superseded by #${{ steps.cpr.outputs.pull-request-number }}." --delete-branch --repo "${{ github.server_url }}/${{ inputs.source-github-repo }}"
          done
